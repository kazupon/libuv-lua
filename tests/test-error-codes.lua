libuv = require('libuvlua')

errors = {
   { libuv.Errors.UNKNOWN, -1 },
   { libuv.Errors.OK, 0 },
   { libuv.Errors.EOF, 1 },
   { libuv.Errors.EADDRINFO, 2 },
   { libuv.Errors.EACCES, 3 },
   { libuv.Errors.EAGAIN, 4 },
   { libuv.Errors.EADDRINUSE, 5 },
   { libuv.Errors.EADDRNOTAVAIL, 6 },
   { libuv.Errors.EAFNOSUPPORT, 7 },
   { libuv.Errors.EALREADY, 8 },
   { libuv.Errors.EBADF, 9 },
   { libuv.Errors.EBUSY, 10 },
   { libuv.Errors.ECONNABORTED, 11 },
   { libuv.Errors.ECONNREFUSED, 12 },
   { libuv.Errors.ECONNRESET, 13 },
   { libuv.Errors.EDESTADDRREQ, 14 },
   { libuv.Errors.EFAULT, 15 },
   { libuv.Errors.EHOSTUNREACH, 16 },
   { libuv.Errors.EINTR, 17 },
   { libuv.Errors.EINVAL, 18 },
   { libuv.Errors.EISCONN, 19 },
   { libuv.Errors.EMFILE, 20 },
   { libuv.Errors.EMSGSIZE, 21 },
   { libuv.Errors.ENETDOWN, 22 },
   { libuv.Errors.ENETUNREACH, 23 },
   { libuv.Errors.ENFILE, 24 },
   { libuv.Errors.ENOBUFS, 25 },
   { libuv.Errors.ENOMEM, 26 },
   { libuv.Errors.ENOTDIR, 27 },
   { libuv.Errors.EISDIR, 28 }, 
   { libuv.Errors.ENONET, 29 },
   { libuv.Errors.ENOTCONN, 31 },
   { libuv.Errors.ENOTSOCK, 32 },
   { libuv.Errors.ENOTSUP, 33 },
   { libuv.Errors.ENOENT, 34 },
   { libuv.Errors.ENOSYS, 35 },
   { libuv.Errors.EPIPE, 36 },
   { libuv.Errors.EPROTO, 37 },
   { libuv.Errors.EPROTONOSUPPORT, 38 },
   { libuv.Errors.EPROTOTYPE, 39 },
   { libuv.Errors.ETIMEDOUT, 40 },
   { libuv.Errors.ECHARSET, 41 },
   { libuv.Errors.EAIFAMNOSUPPORT, 42 },
   { libuv.Errors.EAISERVICE, 44 },
   { libuv.Errors.EAISOCKTYPE, 45 },
   { libuv.Errors.ESHUTDOWN, 46 },
   { libuv.Errors.EEXIST, 47 },
   { libuv.Errors.ESRCH, 48 },
   { libuv.Errors.ENAMETOOLONG, 49 },
   { libuv.Errors.EPERM, 50 },
   { libuv.Errors.ELOOP, 51 },
   { libuv.Errors.EXDEV, 52 },
   { libuv.Errors.ENOTEMPTY, 53 },
   { libuv.Errors.ENOSPC, 54 },
   { libuv.Errors.EIO, 55 },
   { libuv.Errors.EROFS, 56 },
}

for i, v in pairs(errors) do
   assert(v[1] == v[2])
end
